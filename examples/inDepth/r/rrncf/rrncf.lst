gpasm-0.13.7 beta               rrncf.asm   3-11-2015  06:19:19          PAGE  1


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
               00001 ;;;;;;; rrncf.asm ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
               00002 ;
               00003 ;This program tests operation of rrcf according to examples in the PIC18 user
               00004 ;manual. Rrncf rotates the contents of register f right, bit 0 goes to bit 7.
               00005 ;
               00006 ;;;;;;; Program hierarchy ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
               00007 ;
               00008 ; Mainline
               00009 ;  
               00010 ;
               00011 ;;;;;;; Assembler directives ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
               00012 
               00013         list  P=PIC18F452, F=INHX32, C=160, N=0, ST=OFF, MM=OFF, R=DEC, X=ON
               00014         #include p18f452.inc
               00001         LIST
               00002 ; P18F452.INC  Standard Header File, Version 1.4   Microchip Technology, Inc.
               00983         LIST
               00015 
               00016 ;;;;;;; Variables ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
               00017 
               00018         cblock  0x000           ;Beginning of Access RAM
               00019         REG1
               00020         endc
               00021 
               00022 ;;;;;;; Macro definitions ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
               00023 
               00024 ;;;;;;; Vectors ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
               00025 
               00026 
0000           00027         org  0x0000             ;Reset vector
0000 0000      00028         nop
0002 EF0E F000 00029         goto  Mainline
               00030 
0008           00031         org  0x0008             ;High priority interrupt vector
0008 EF04 F000 00032         goto  $                 ;Trap
               00033 
0018           00034         org  0x0018             ;Low priority interrupt vector
0018 EF0C F000 00035         goto  $                 ;Trap
               00036 
               00037 ;;;;;;; Mainline program ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
               00038 
001C 00039 Mainline
               00040 ;Example 1:
               00041         
001C 0101      00042         movlb   0x01            ;Select bank 1 for banked addressing
001E 0EE6      00043         movlw   0xe6            ;Place 0xe6 in wreg
0020 6F00      00044         movwf   REG1, 1         ;Copy wreg to REG1
0022 4100      00045         rrncf   REG1, 0, 1      ;Using banked addressing, rotate right REG1, place 
               00046                                 ;result in wreg
               00047 
               00048 ;Example 2:
               00049 ;Case 1:
               00050         
0024 EE03 F0C2 00051         lfsr    0, 0x3c2        ;Place 0x3c2 in FSR0
0028 0E3A      00052         movlw   0x3a            ;Place 0x3a in wreg
002A 6EEF      00053         movwf   INDF0           ;Copy wreg to register at address pointed to by FSR0
002C 43EF      00054         rrncf   INDF0, 1, 1     ;Rotate right value in register pointed to by FSR0, place
               00055                                 ;result back in register, bit 0 is loaded into bit 7 
               00056 
               00057 ;Case 2:
               00058         
002E 0E39      00059         movlw   0x39            ;Place 0x39 into wreg
0030 6EEF      00060         movwf   INDF0           ;Copy wreg to register at address pointed to by FSR0
0032 43EF      00061         rrncf   INDF0, 1, 1     ;Rotate right value in register pointed to by FSR0, place
               00062                                 ;result back in register, bit 0 is loaded into bit 7
               00063 
0034 EF1A F000 00064 stop    goto    stop
               00065 


Errors   :       0
Warnings :       0 reported,       0 suppressed
Messages :       0 reported,       0 suppressed

