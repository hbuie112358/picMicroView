gpasm-0.13.7 beta               setf.asm    3-10-2015  20:52:16          PAGE  1


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
               00001 ;;;;;;; setf.asm ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
               00002 ;
               00003 ;This program tests operation of setf according to examples in the PIC18 user
               00004 ;manual. Setf sets every bit in register f to 1. That is, it loads register f
               00005 ;with 0xff.
               00006 ;
               00007 ;;;;;;; Program hierarchy ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
               00008 ;
               00009 ; Mainline
               00010 ;  
               00011 ;
               00012 ;;;;;;; Assembler directives ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
               00013 
               00014         list  P=PIC18F452, F=INHX32, C=160, N=0, ST=OFF, MM=OFF, R=DEC, X=ON
               00015         #include p18f452.inc
               00001         LIST
               00002 ; P18F452.INC  Standard Header File, Version 1.4   Microchip Technology, Inc.
               00983         LIST
               00016 
               00017 ;;;;;;; Variables ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
               00018 
               00019         cblock  0x000           ;Beginning of Access RAM
               00020         FLAG_REG
               00021         endc
               00022 
               00023 ;;;;;;; Macro definitions ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
               00024 
               00025 ;;;;;;; Vectors ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
               00026 
               00027 
0000           00028         org  0x0000             ;Reset vector
0000 0000      00029         nop
0002 EF0E F000 00030         goto  Mainline
               00031 
0008           00032         org  0x0008             ;High priority interrupt vector
0008 EF04 F000 00033         goto  $                 ;Trap
               00034 
0018           00035         org  0x0018             ;Low priority interrupt vector
0018 EF0C F000 00036         goto  $                 ;Trap
               00037 
               00038 ;;;;;;; Mainline program ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
               00039 
001C 00040 Mainline
               00041 ;Example 1:
               00042         
001C 0101      00043         movlb   0x01            ;Select bank 1 for banked addressing
001E 0E5A      00044         movlw   0x5a            ;Place 0xe6 in wreg
0020 6F00      00045         movwf   FLAG_REG, 1     ;Copy wreg to FLAG_REG
0022 6900      00046         setf    FLAG_REG, 1     ;Using banked addressing, set all bits in FLAG_REG
               00047 
               00048 ;Example 2:
               00049         
0024 EE04 F0C2 00050         lfsr    0, 0x4c2        ;Place 0x4c2 in FSR0
0028 0EAA      00051         movlw   0xaa            ;Place 0xaa in wreg
002A 6EEF      00052         movwf   INDF0           ;Copy wreg to register at address pointed to by FSR0
002C 69EF      00053         setf    INDF0, 1        ;Set all bits in register pointed to by FSR0, place 
               00054                                 ;result back in register.
               00055 
002E EF17 F000 00056 stop    goto    stop
               00057 


Errors   :       0
Warnings :       0 reported,       0 suppressed
Messages :       0 reported,       0 suppressed

