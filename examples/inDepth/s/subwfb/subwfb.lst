gpasm-0.13.7 beta               subwfb.asm  3-12-2015  14:24:44          PAGE  1


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
               00001 ;;;;;;; subwfb.asm ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
               00002 ;
               00003 ;This program tests operation of subwfb instruction. Subwfb subtracts wreg and borrow
               00004 ;flag (carry) from f (two's complement method). This instruction is tested 
               00005 ;according to the examples in the pic18 user manual.
               00006 ;
               00007 ;;;;;;; Program hierarchy ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
               00008 ;
               00009 ; Mainline
               00010 ;  
               00011 ;
               00012 ;;;;;;; Assembler directives ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
               00013 
               00014         #include p18f452.inc
               00001         LIST
               00002 ; P18F452.INC  Standard Header File, Version 1.4   Microchip Technology, Inc.
               00983         LIST
               00015         list  P=PIC18F452, F=INHX32, C=160, N=0, ST=OFF, MM=OFF, R=DEC, X=ON
               00016 
               00017 ;;;;;;; Variables ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
               00018 
               00019         cblock  0x000           ;Beginning of Access RAM
               00020         REG1
               00021         endc
               00022 
               00023 ;;;;;;; Macro definitions ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
               00024 
               00025 ;;;;;;; Vectors ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
               00026 
               00027 
0000           00028         org  0x0000             ;Reset vector
0000 0000      00029         nop
0002 EF0E F000 00030         goto  Mainline
               00031 
0008           00032         org  0x0008             ;High priority interrupt vector
0008 EF04 F000 00033         goto  $                 ;Trap
               00034 
0018           00035         org  0x0018             ;Low priority interrupt vector
0018 EF0C F000 00036         goto  $                 ;Trap
               00037 
               00038 ;;;;;;; Mainline program ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
               00039 
001C 00040 Mainline
               00041 
               00042 ;Example 1:
               00043 ;Case 1:
               00044 
001C 0101      00045         movlb   0x01            ;Select bank 1 of data memory
001E 80D8      00046         bsf     STATUS, 0       ;Set status register carry (borrow) bit 
0020 0E03      00047         movlw   0x03            ;Place 0x03 in wreg
0022 6F00      00048         movwf   REG1, 1         ;Copy wreg to REG1
0024 0E02      00049         movlw   0x02            ;Place 0x02 in wreg
0026 5B00      00050         subwfb  REG1, 1, 1      ;Subtract wreg and borrow bit from REG1,
               00051                                 ;REG1: 0x01, status register C, DC bits are set
               00052 
               00053 ;Case 2:
               00054 
0028 80D8      00055         bsf     STATUS, 0       ;Set status register carry (borrow) bit 
002A 0E02      00056         movlw   0x02            ;Place 0x02 in wreg
002C 6F00      00057         movwf   REG1, 1         ;Copy wreg to REG1
002E 0E02      00058         movlw   0x02            ;Place 0x02 in wreg
0030 5B00      00059         subwfb  REG1, 1, 1      ;Subtract wreg and borrow bit from REG1,
               00060                                 ;REG1: 0x00, status register C, DC, Z bits are set
               00061 
               00062 ;Case 3:
               00063 
0032 80D8      00064         bsf     STATUS, 0       ;Set status register carry (borrow) bit 
0034 0E01      00065         movlw   0x01            ;Place 0x01 in wreg
0036 6F00      00066         movwf   REG1, 1         ;Copy wreg to REG1
0038 0E02      00067         movlw   0x02            ;Place 0x02 in wreg
003A 5B00      00068         subwfb  REG1, 1, 1      ;Subtract wreg and borrow bit from REG1,
               00069                                 ;REG1: 0xff, status register N bit is set
               00070         
               00071 
003C EF1E F000 00072 stop    goto            stop
               00073 


Errors   :       0
Warnings :       0 reported,       0 suppressed
Messages :       0 reported,       0 suppressed

