gpasm-0.13.7 beta               subfwb.asm  3-12-2015  12:14:28          PAGE  1


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
               00001 ;;;;;;; subfwb.asm ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
               00002 ;
               00003 ;This program tests operation of subfwb instruction. Subfwb subtracts register
               00004 ;f and carry flag from wreg (two's complement method). This instruction is tested 
               00005 ;according to the examples in the pic18 user manual.
               00006 ;
               00007 ;;;;;;; Program hierarchy ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
               00008 ;
               00009 ; Mainline
               00010 ;  
               00011 ;
               00012 ;;;;;;; Assembler directives ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
               00013 
               00014         #include p18f452.inc
               00001         LIST
               00002 ; P18F452.INC  Standard Header File, Version 1.4   Microchip Technology, Inc.
               00983         LIST
               00015         list  P=PIC18F452, F=INHX32, C=160, N=0, ST=OFF, MM=OFF, R=DEC, X=ON
               00016 
               00017 ;;;;;;; Variables ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
               00018 
               00019         cblock  0x000           ;Beginning of Access RAM
               00020         MYREG
               00021         endc
               00022 
               00023 ;;;;;;; Macro definitions ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
               00024 
               00025 ;;;;;;; Vectors ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
               00026 
               00027 
0000           00028         org  0x0000             ;Reset vector
0000 0000      00029         nop
0002 EF0E F000 00030         goto  Mainline
               00031 
0008           00032         org  0x0008             ;High priority interrupt vector
0008 EF04 F000 00033         goto  $                 ;Trap
               00034 
0018           00035         org  0x0018             ;Low priority interrupt vector
0018 EF0C F000 00036         goto  $                 ;Trap
               00037 
               00038 ;;;;;;; Mainline program ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
               00039 
001C 00040 Mainline
               00041 
               00042 ;Example 1:
               00043 
001C 90D8      00044         bcf     STATUS, 0       ;Clear status register carry bit (borrow bit)
001E 0E37      00045         movlw   0x37            ;Place 0x37 in wreg
0020 6E00      00046         movwf   MYREG           ;Copy wreg to MYREG
0022 0E10      00047         movlw   0x10            ;Place 0x10 in wreg
0024 5700      00048         subfwb  MYREG, 1, 1     ;Subtract MYREG and borrow bit from wreg,
               00049                                 ;MYREG: 0xa8, N bit is set
               00050 
               00051 ;Example 2:
               00052 ;Case 1:
               00053 
0026 80D8      00054         bsf     STATUS, 0       ;Set status register carry (borrow) bit 
0028 0E03      00055         movlw   0x03            ;Place 0x03 in wreg
002A 6E00      00056         movwf   MYREG           ;Copy wreg to MYREG
002C 0E02      00057         movlw   0x02            ;Place 0x02 in wreg
002E 5700      00058         subfwb  MYREG, 1, 1     ;Subtract MYREG and borrow bit from wreg,
               00059                                 ;MYREG: 0xff, N bit is set
               00060 
               00061 ;Case 2:
               00062 
0030 80D8      00063         bsf     STATUS, 0       ;Set status register carry (borrow) bit 
0032 0E02      00064         movlw   0x02            ;Place 0x02 in wreg
0034 6E00      00065         movwf   MYREG           ;Copy wreg to MYREG
0036 0E02      00066         movlw   0x02            ;Place 0x02 in wreg
0038 5700      00067         subfwb  MYREG, 1, 1     ;Subtract MYREG and borrow bit from wreg,
               00068                                 ;MYREG: 0x00, status register Z, C, DC bits are set
               00069 
               00070 ;Case 3:
               00071 
003A 80D8      00072         bsf     STATUS, 0       ;Set status register carry (borrow) bit 
003C 0E01      00073         movlw   0x01            ;Place 0x01 in wreg
003E 6E00      00074         movwf   MYREG           ;Copy wreg to MYREG
0040 0E03      00075         movlw   0x03            ;Place 0x03 in wreg
0042 5700      00076         subfwb  MYREG, 1, 1     ;Subtract MYREG and borrow bit from wreg,
               00077                                 ;MYREG: 0x02, status register C and DC bits are set
               00078         
               00079 
0044 EF22 F000 00080 stop    goto            stop
               00081 


Errors   :       0
Warnings :       0 reported,       0 suppressed
Messages :       0 reported,       0 suppressed

