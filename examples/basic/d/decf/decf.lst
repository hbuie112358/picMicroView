gpasm-0.13.7 beta               decf.asm    2-21-2015  16:29:43          PAGE  1


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
               00001 ;;;;;;; decf.asm ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
               00002 ;
               00003 ;;;;;;; Program hierarchy ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
               00004 ;
               00005 ; Mainline
               00006 ;  
               00007 ;
               00008 ;;;;;;; Assembler directives ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
               00009 
               00010         #include p18f452.inc
               00001         LIST
               00002 ; P18F452.INC  Standard Header File, Version 1.4   Microchip Technology, Inc.
               00983         LIST
               00011         list  P=PIC18F452, F=INHX32, C=160, N=0, ST=OFF, MM=OFF, R=DEC, X=ON
               00012 
               00013 ;;;;;;; Variables ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
               00014 
               00015         cblock  0x000           ;Beginning of Access RAM
               00016         CNT
               00017         endc
               00018 
               00019 ;       cblock  0x100           ;Beginning of 0x100 block, just above Access Ram
               00020 ;       tempBank1
               00021 ;       endc    
               00022 
               00023 ;;;;;;; Macro definitions ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
               00024 
               00025 ;;;;;;; Vectors ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
               00026 
               00027 
0000           00028         org  0x0000             ;Reset vector
0000 0000      00029         nop
0002 EF0E F000 00030         goto  Mainline
               00031 
0008           00032         org  0x0008             ;High priority interrupt vector
0008 EF04 F000 00033         goto  $                 ;Trap
               00034 
0018           00035         org  0x0018             ;Low priority interrupt vector
0018 EF0C F000 00036         goto  $                 ;Trap
               00037 
               00038 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
               00039 ;See manual chapter 31 for more detail on individual instructions
               00040 ;Syntax:        decf    f, d, a         (register, destination register, bank select)
               00041                                         ;"d", "a" both default to 0. For d, can use "f" 
               00042                                         ;instead of 1, can use "w" instead of 0.
               00043 
               00044 ;               movwf   f, a            (register, bank select)
               00045 ;               movlw   k               (literal)
               00046 ;               movlb   k               (literal)
               00047 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
               00048 
               00049 ;;;;;;; Mainline program ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
               00050 
001C 00051 Mainline
               00052 
               00053 ;Example 1:
               00054 
001C 0101      00055         movlb   1               ;Set bank select register to 1
001E 0E01      00056         movlw   1               ;Place 1 in wreg
0020 6F00      00057         movwf   CNT, 1          ;Using bank select, copy wreg value into CNT
0022 0700      00058         decf    CNT, 1, 1       ;Using bank select, decrement CNT, place result in CNT
               00059 
0024 0700      00060         decf    CNT, 1, 1       ;Decrement CNT again to test rollover from 0x00 to 0xff
               00061 
               00062 ;Example 2:
               00063 
0026 EE01 F0C2 00064         lfsr    0, 0x1c2        ;Load FSR0 with 0x1c2
002A 0E01      00065         movlw   1               ;Place 1 in wreg
002C 6EEF      00066         movwf   INDF0           ;Copy wreg value to location pointed to by FSR0
002E 07EF      00067         decf    INDF0, 1, 1     ;Decrement value in location pointed to by FSR0,
               00068                                 ;place result in location pointed to by FSR0. Ignores
               00069                                 ;banked addressing since register argument is an INDF register
               00070 
               00071 ;Check writing to wreg
0030 04EF      00072         decf    INDF0, 0
               00073                                         
0032 EF19 F000 00074 stop    goto    stop
               00075 


Errors   :       0
Warnings :       0 reported,       0 suppressed
Messages :       0 reported,       0 suppressed

