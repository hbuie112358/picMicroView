gpasm-0.13.7 beta               iorlw.asm   3-11-2015  19:34:02          PAGE  1


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
               00001 ;;;;;;; iorlw.asm ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
               00002 ;
               00003 ;This program tests operation of iorlw and uses the examples starting on 
               00004 ;page 734 of the PIC18 user manual. Iorlw performs inclusive OR the WREG with 
               00005 ;literal value k and places the result in wreg
               00006 ;
               00007 ;;;;;;; Program hierarchy ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
               00008 ;
               00009 ; Mainline
               00010 ;  
               00011 ;
               00012 ;;;;;;; Assembler directives ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
               00013 
               00014         #include p18f452.inc
               00001         LIST
               00002 ; P18F452.INC  Standard Header File, Version 1.4   Microchip Technology, Inc.
               00983         LIST
               00015         list  P=PIC18F452, F=INHX32, C=160, N=0, ST=OFF, MM=OFF, R=DEC, X=ON
               00016 
               00017 ;;;;;;; Variables ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
               00018 
               00019         cblock  0x037           ;Place MYREG at address 0x039 of Access RAM
               00020         MYREG
               00021         endc
               00022                 
               00023 
               00024 ;;;;;;; Macro definitions ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
               00025 
               00026 ;;;;;;; Vectors ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
               00027 
               00028 
0000           00029         org  0x0000             ;Reset vector
0000 0000      00030         nop
0002 EF0E F000 00031         goto  Mainline
               00032 
0008           00033         org  0x0008             ;High priority interrupt vector
0008 EF04 F000 00034         goto  $                 ;Trap
               00035 
0018           00036         org  0x0018             ;Low priority interrupt vector
0018 EF0C F000 00037         goto  $                 ;Trap
               00038 
               00039 
               00040 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
               00041 ;See manual chapter 31 for more detail on individual instructions
               00042 ;Syntax:        iorlw   k               (literal)
               00043 
               00044 ;               movwf   f, a            (register, bank select)
               00045 ;               movlw   k               (literal)
               00046 ;               movlb   k               (literal)
               00047 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
               00048 
               00049 ;;;;;;; Mainline program ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
               00050 
001C 00051 Mainline
               00052 
               00053 ;Example 1:
               00054 
001C 0E9A      00055         movlw   0x9a            ;Place 0x9a in wreg                             10011010
001E 0935      00056         iorlw   0x35            ;bitwise OR 0x35 with wreg (N bit is set)       00110101
               00057                                 ;N bit is set, result is 0xbf                   10111111
               00058 ;Example 2:
               00059 
0020 0E9A      00060         movlw   0x9a            ;Place 0x9a in wreg                             10011010
0022 0937      00061         iorlw   MYREG           ;bitwise OR 0x9a with address of MYREG (0x37)   00110111
               00062                                 ;N bit is set, result is 0xbf                   10111111
               00063 
               00064 ;Example 3: (to be implemented)
               00065 
               00066 ;Example 4:
               00067                 
0024 0E00      00068         movlw   0x00            ;Place 0x00 in wreg
0026 0900      00069         iorlw   0x00            ;bitwise OR 0x00 with wreg, Z bit is set
               00070 
               00071 
0028 EF14 F000 00072 stop            goto            stop
               00073 


Errors   :       0
Warnings :       0 reported,       0 suppressed
Messages :       0 reported,       0 suppressed

