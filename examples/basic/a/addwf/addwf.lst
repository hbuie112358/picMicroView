gpasm-0.13.7 beta               addwf.asm   3-4-2015  04:50:59           PAGE  1


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
               00001 ;;;;;;; addwf.asm ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
               00002 ;
               00003 ;;;;;;; Program hierarchy ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
               00004 ;
               00005 ; Mainline
               00006 ;  
               00007 ;
               00008 ;;;;;;; Assembler directives ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
               00009 
               00010         #include p18f452.inc
               00001         LIST
               00002 ; P18F452.INC  Standard Header File, Version 1.4   Microchip Technology, Inc.
               00983         LIST
               00011         list  P=PIC18F452, F=INHX32, C=160, N=0, ST=OFF, MM=OFF, R=DEC, X=ON
               00012 
               00013 ;;;;;;; Variables ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
               00014 
               00015         cblock  0x000           ;Beginning of Access RAM
               00016         temp
               00017         endc
               00018 
               00019         cblock  0x100           ;Beginning of 0x100 block, just above Access Ram
               00020         tempBank1
               00021         endc    
               00022 
               00023         cblock  0x2eb           ;assign variables to same ls byte location as PLUSW0, PREINC0 
               00024         testPW0
               00025         testPI0
               00026         endc
               00027 
               00028         cblock  0x6e2           ;assign variable for example 2 and 3 test
               00029         testAbit
               00030         endc
               00031 
               00032 ;;;;;;; Macro definitions ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
               00033 
               00034 ;;;;;;; Vectors ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
               00035 
               00036 
0000           00037         org  0x0000             ;Reset vector
0000 0000      00038         nop
0002 EF0E F000 00039         goto  Mainline
               00040 
0008           00041         org  0x0008             ;High priority interrupt vector
0008 EF04 F000 00042         goto  $                 ;Trap
               00043 
0018           00044         org  0x0018             ;Low priority interrupt vector
0018 EF0C F000 00045         goto  $                 ;Trap
               00046 
               00047 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
               00048 ;See manual chapter 31 for more detail on individual instructions
               00049 ;Syntax:        addwf   f, d, a         (register, destination register, bank select)
               00050                                         ;"d", "a" both default to 0. For d, can use "f" 
               00051                                         ;instead of 1, can use "w" instead of 0.
               00052 
               00053 ;               movwf   f, a            (register, bank select)
               00054 ;               movlw   k               (literal)
               00055 ;               movlb   k               (literal)
               00056 ;               lfsr    f, k            (f in {0, 1, 2})
               00057 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
               00058 
               00059 ;;;;;;; Mainline program ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
               00060 
001C 00061 Mainline
001C 0E05      00062         movlw   5               ;Place 5 in wreg
001E 6E00      00063         movwf   temp            ;Move 5 to temp
0020 0E06      00064         movlw   6               ;Place 6 in wreg
0022 2600      00065         addwf   temp, f         ;Add contents of wreg and temp, place result in temp
0024 0EFE      00066         movlw   0xfe            ;Place 0xfe in wreg (in order to produce carry with next add)
0026 2400      00067         addwf   temp, w         ;Add wreg, temp, status reg bit 0 (C) goes high
0028 2400      00068         addwf   temp, w         ;Add wreg, temp, status reg bit 0 (C) goes low
               00069         
002A EF15 F000 00070 stop    goto            stop
               00071 


Errors   :       0
Warnings :       0 reported,       0 suppressed
Messages :       0 reported,       0 suppressed

