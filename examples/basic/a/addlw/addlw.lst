gpasm-0.13.7 beta               addlw.asm   3-12-2015  18:48:58          PAGE  1


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
               00001 ;;;;;;; addlw.asm ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
               00002 ;
               00003 ;This program tests operation of addlw instruction. Addlw adds a literal
               00004 ;k to the contents of the wreg and places result in wreg.
               00005 ;
               00006 ;;;;;;; Program hierarchy ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
               00007 ;
               00008 ; Mainline
               00009 ;  
               00010 ;
               00011 ;;;;;;; Assembler directives ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
               00012 
               00013         #include p18f452.inc
               00001         LIST
               00002 ; P18F452.INC  Standard Header File, Version 1.4   Microchip Technology, Inc.
               00983         LIST
               00014         list  P=PIC18F452, F=INHX32, C=160, N=0, ST=OFF, MM=OFF, R=DEC, X=ON
               00015 
               00016 ;;;;;;; Variables ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
               00017 
               00018         cblock  0x037           ;Beginning of Access RAM
               00019         MYREG
               00020         endc
               00021 
               00022 ;;;;;;; Macro definitions ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
               00023 
               00024 ;;;;;;; Vectors ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
               00025 
               00026 
0000           00027         org  0x0000             ;Reset vector
0000 0000      00028         nop
0002 EF0E F000 00029         goto  Mainline
               00030 
0008           00031         org  0x0008             ;High priority interrupt vector
0008 EF04 F000 00032         goto  $                 ;Trap
               00033 
0018           00034         org  0x0018             ;Low priority interrupt vector
0018 EF0C F000 00035         goto  $                 ;Trap
               00036 
               00037 ;;;;;;; Mainline program ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
               00038 
001C 00039 Mainline
               00040 
001C 0E05      00041         movlw   5       ;Place 5 in wreg
001E 0F0A      00042         addlw   10      ;Add 10, wreg, result in wreg (sum is 0x0f)
               00043 
               00044 ;Example 1:
0020 0E18      00045         movlw   0x18    ;Place 0x18 in wreg
0022 0F19      00046         addlw   0x19    ;Add 0x19 to contents in wreg (DC bit 1 in status
               00047                         ;register is set since carry from bit 3 to bit 4)
               00048 
               00049 ;Example 2:
0024 0E60      00050         movlw   0x60    ;Place 0x60 in wreg
0026 0F37      00051         addlw   MYREG   ;Add address of MYREG (0x037) to contents in wreg 
               00052                         ;(OV bit 3 in status register is set since carry 
               00053                         ;from bit 6 to bit 7)
               00054 
               00055 ;Example 3: (to be implemented)
               00056 
               00057 ;Example 4:
               00058 
0028 0E02      00059         movlw   0x02    ;Place 0x02 in wreg
Warning [202] : Argument out of range. Least significant bits used.
002A 0FF9      00060         addlw   PCL     ;Add value in PCL to wreg (*note* - example in user 
               00061                         ;manual says that PCL is at 0xff8 but that's a mistake. 
               00062                         ;Other places in same manual clearly states PCL at 
               00063                         ;0xff9, so result is 0xfbnot 0xfa as stated in example 
               00064                         ;in manual)
               00065 
               00066 ;Example 5:
               00067 
  00000002     00068 Offset  equ     0x02
002C 0E10      00069         movlw   0x10    ;Place 0x10 in wreg
002E 0F02      00070         addlw   Offset  ;Add value of constant Offset to wreg
               00071         
               00072 
0030 EF18 F000 00073 stop    goto    stop
               00074 


Errors   :       0
Warnings :       1 reported,       0 suppressed
Messages :       0 reported,       0 suppressed

