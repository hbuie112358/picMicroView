gpasm-0.13.7 beta               subfwb.asm  3-12-2015  12:13:45          PAGE  1


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
               00001 ;;;;;;; subfwb.asm ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
               00002 ;
               00003 ;This program tests operation of subfwb instruction. Subfwb subtracts register
               00004 ;f and carry flag from wreg (two's complement method).
               00005 ;
               00006 ;;;;;;; Program hierarchy ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
               00007 ;
               00008 ; Mainline
               00009 ;  
               00010 ;
               00011 ;;;;;;; Assembler directives ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
               00012 
               00013         #include p18f452.inc
               00001         LIST
               00002 ; P18F452.INC  Standard Header File, Version 1.4   Microchip Technology, Inc.
               00983         LIST
               00014         list  P=PIC18F452, F=INHX32, C=160, N=0, ST=OFF, MM=OFF, R=DEC, X=ON
               00015 
               00016 ;;;;;;; Variables ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
               00017 
               00018         cblock  0x000           ;Beginning of Access RAM
               00019         MYREG
               00020         endc
               00021 
               00022 ;;;;;;; Macro definitions ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
               00023 
               00024 ;;;;;;; Vectors ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
               00025 
               00026 
0000           00027         org  0x0000             ;Reset vector
0000 0000      00028         nop
0002 EF0E F000 00029         goto  Mainline
               00030 
0008           00031         org  0x0008             ;High priority interrupt vector
0008 EF04 F000 00032         goto  $                 ;Trap
               00033 
0018           00034         org  0x0018             ;Low priority interrupt vector
0018 EF0C F000 00035         goto  $                 ;Trap
               00036 
               00037 ;;;;;;; Mainline program ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
               00038 
001C 00039 Mainline
               00040 
               00041 ;Example 1:
               00042 
001C 90D8      00043         bcf     STATUS, 0       ;Clear status register carry bit (borrow bit)
001E 0E37      00044         movlw   0x37            ;Place 0x37 in wreg
0020 6E00      00045         movwf   MYREG           ;Copy wreg to MYREG
0022 0E10      00046         movlw   0x10            ;Place 0x10 in wreg
0024 5700      00047         subfwb  MYREG, 1, 1     ;Subtract MYREG and borrow bit from wreg,
               00048                                 ;MYREG: 0xa8, N bit is set
               00049 
               00050 ;Example 2:
               00051 ;Case 1:
               00052 
0026 80D8      00053         bsf     STATUS, 0       ;Set status register carry (borrow) bit 
0028 0E03      00054         movlw   0x03            ;Place 0x03 in wreg
002A 6E00      00055         movwf   MYREG           ;Copy wreg to MYREG
002C 0E02      00056         movlw   0x02            ;Place 0x02 in wreg
002E 5700      00057         subfwb  MYREG, 1, 1     ;Subtract MYREG and borrow bit from wreg,
               00058                                 ;MYREG: 0xff, N bit is set
               00059 
               00060 ;Case 2:
               00061 
0030 80D8      00062         bsf     STATUS, 0       ;Set status register carry (borrow) bit 
0032 0E02      00063         movlw   0x02            ;Place 0x02 in wreg
0034 6E00      00064         movwf   MYREG           ;Copy wreg to MYREG
0036 0E02      00065         movlw   0x02            ;Place 0x02 in wreg
0038 5700      00066         subfwb  MYREG, 1, 1     ;Subtract MYREG and borrow bit from wreg,
               00067                                 ;MYREG: 0x00, status register Z, C, DC bits are set
               00068 
               00069 ;Case 3:
               00070 
003A 80D8      00071         bsf     STATUS, 0       ;Set status register carry (borrow) bit 
003C 0E01      00072         movlw   0x01            ;Place 0x01 in wreg
003E 6E00      00073         movwf   MYREG           ;Copy wreg to MYREG
0040 0E03      00074         movlw   0x03            ;Place 0x03 in wreg
0042 5700      00075         subfwb  MYREG, 1, 1     ;Subtract MYREG and borrow bit from wreg,
               00076                                 ;MYREG: 0x02, status register C and DC bits are set
               00077         
               00078 
0044 EF22 F000 00079 stop    goto            stop
               00080 


Errors   :       0
Warnings :       0 reported,       0 suppressed
Messages :       0 reported,       0 suppressed

