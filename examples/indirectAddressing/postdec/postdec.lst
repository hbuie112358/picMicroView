gpasm-0.13.7 beta               postdec.asm 2-14-2015  17:03:21          PAGE  1


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
               00001 ;;;;;;; postdec.asm ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
               00002 ;
               00003 ;This program tests indirect addressing mechanism writes/reads to POSTDECx
               00004 ;
               00005 ;
               00006 ;;;;;;; Program hierarchy ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
               00007 ;
               00008 ; Mainline
               00009 ;  
               00010 ;
               00011 ;;;;;;; Assembler directives ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
               00012 
               00013         #include p18f452.inc
               00001         LIST
               00002 ; P18F452.INC  Standard Header File, Version 1.4   Microchip Technology, Inc.
               00983         LIST
               00014         list  P=PIC18F452, F=INHX32, C=160, N=0, ST=OFF, MM=OFF, R=DEC, X=ON
               00015 
               00016 ;;;;;;; Variables ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
               00017 
               00018         cblock  0x000           ;Beginning of Access RAM
               00019 
               00020         endc
               00021 
               00022 ;;;;;;; Macro definitions ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
               00023 
               00024 ;;;;;;; Vectors ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
               00025 
               00026 
0000           00027         org  0x0000             ;Reset vector
0000 0000      00028         nop
0002 EF0E F000 00029         goto  Mainline
               00030 
0008           00031         org  0x0008             ;High priority interrupt vector
0008 EF04 F000 00032         goto  $                 ;Trap
               00033 
0018           00034         org  0x0018             ;Low priority interrupt vector
0018 EF0C F000 00035         goto  $                 ;Trap
               00036 
               00037 ;;;;;;; Mainline program ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
               00038 
001C 00039 Mainline
               00040 ;This section tests indirect addressing postdec operation. It uses postdec to create a 
               00041 ;table of values in access memory from 0x001 to 0xffe. Checks rollover from 0x000 to 
               00042 ;0xfff. It writes values, resets the FSR, then reads the values back into the wreg.
               00043 ;Write test:
               00044 
               00045 ;       movlw   0               ;Place 0 in wreg
               00046 ;       movwf   FSR0H           ;Move 0 to FSR0H
               00047 ;       movlw   0x01            ;Place 0x01 in wreg
               00048 ;       movwf   FSR0L           ;move 0x01 to FSR0L
001C EE00 F001 00049         lfsr    0, 0x001        ;Place 0x001 in FSR0
0020 0EAA      00050         movlw   0xaa            ;Place 0xaa in wreg
0022 6EED      00051         movwf   POSTDEC0        ;Write wreg to address pointed to by FSR0, decrement FSR0
0024 0E0E      00052         movlw   0x0e            ;Place 0x0e in wreg
0026 6EED      00053         movwf   POSTDEC0        ;Write wreg to address pointed to by FSR0, decrement FSR0
0028 0E02      00054         movlw   0x02            ;Place 0x02 in wreg
002A 6EED      00055         movwf   POSTDEC0        ;Write wreg to address pointed to by FSR0, decrement FSR0
002C 0E1C      00056         movlw   0x1c            ;Place 0x1c in wreg
002E 6EED      00057         movwf   POSTDEC0        ;Write wreg to address pointed to by FSR0, decrement FSR0
               00058 
               00059 ;Read test:
               00060 
               00061 ;       movlw   0               ;Place 0 in wreg
               00062 ;       movwf   FSR0H           ;Move 0 to FSR0H
               00063 ;       movlw   0x01            ;Place 0x01 in wreg
               00064 ;       movwf   FSR0L           ;move 0x01 to FSR0L
0030 EE00 F001 00065         lfsr    0, 0x001
0034 CFED FFE8 00066         movff   POSTDEC0, WREG
0038 CFED FFE8 00067         movff   POSTDEC0, WREG
003C CFED FFE8 00068         movff   POSTDEC0, WREG
0040 CFED FFE8 00069         movff   POSTDEC0, WREG
               00070 
               00071         
               00072 
               00073 
               00074 
0044 EF22 F000 00075 stop    goto            stop
               00076 


Errors   :       0
Warnings :       0 reported,       0 suppressed
Messages :       0 reported,       0 suppressed

